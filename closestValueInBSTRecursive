class Program {
  public static int findClosestValueInBst(BST tree, int target) {
   
	 return findClosestValueInBstHelper(tree, target, tree.value);
  }

	
	public static int findClosestValueInBstHelper(BST tree, int target, int closest){
		
			if(tree == null){
				return closest;
			}

			if(Math.abs(target-closest) > Math.abs(target - tree.value)) 
			{
				closest= tree.value;
			}
			if(target > tree.value){
				closest = findClosestValueInBstHelper(tree.right, target, closest);
			} else if(target < tree.value){
				closest = findClosestValueInBstHelper(tree.left, target, closest);
			} 
		
		return closest;
		
	}

	
	
  static class BST {
    public int value;
    public BST left;
    public BST right;

    public BST(int value) {
      this.value = value;
    }
		
		
		
  }
}
